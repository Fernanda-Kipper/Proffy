{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nanda\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Nanda\\\\Proffy\\\\mobile\\\\App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { AppLoading } from 'expo';\nimport { Archivo_700Bold, Archivo_400Regular, useFonts } from '@expo-google-fonts/archivo';\nimport { Poppins_400Regular, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport AppStack from \"./src/routes/AppStack\";\nexport default function App() {\n  var _useFonts = useFonts({\n    Archivo_400Regular: Archivo_400Regular,\n    Archivo_700Bold: Archivo_700Bold,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(AppStack, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), React.createElement(StatusBar, {\n      style: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/nanda/OneDrive/√Årea de Trabalho/Nanda/Proffy/mobile/App.tsx"],"names":["StatusBar","React","AppLoading","Archivo_700Bold","Archivo_400Regular","useFonts","Poppins_400Regular","Poppins_600SemiBold","AppStack","App","fontsLoaded"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,QAA9C,QAA6D,4BAA7D;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,4BAAxD;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACTJ,QAAQ,CAAC;AAC1BD,IAAAA,kBAAkB,EAAlBA,kBAD0B;AAE1BD,IAAAA,eAAe,EAAfA,eAF0B;AAG1BG,IAAAA,kBAAkB,EAAlBA,kBAH0B;AAI1BC,IAAAA,mBAAmB,EAAnBA;AAJ0B,GAAD,CADC;AAAA;AAAA,MACvBG,WADuB;;AAQ5B,MAAI,CAACA,WAAL,EAAiB;AACf,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEM;AACF,WACE,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMH;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { AppLoading } from 'expo';\nimport { Archivo_700Bold, Archivo_400Regular, useFonts} from '@expo-google-fonts/archivo';\nimport { Poppins_400Regular, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport AppStack from './src/routes/AppStack';\n\nexport default function App() {\n  let [fontsLoaded]= useFonts({\n    Archivo_400Regular,\n    Archivo_700Bold,\n    Poppins_400Regular,\n    Poppins_600SemiBold\n  })\n  \n  if (!fontsLoaded){\n    return <AppLoading/>;\n  } else{\n      return (\n        <>\n          <AppStack/>\n          <StatusBar style='light' />\n        </>\n      );\n  }\n}"]},"metadata":{},"sourceType":"module"}